from flask import Flask, request, jsonify
from flask_cors import CORS
import time  # For simulating processing delay

app = Flask(__name__)
CORS(app)  # Enable for development

# Your actual chatbot logic would go here
def get_chatbot_response(user_input):
    """Example chatbot logic - replace with your actual implementation"""
    user_input = user_input.lower().strip()
    
    if not user_input:
        return "Please type something meaningful."
    
    responses = {
        "hello": "Hello there! How can I help you today?",
        "hi": "Hi! What can I do for you?",
        "help": "I can answer questions about our services. Try asking about products or support.",
        "bye": "Goodbye! Have a great day!",
        "default": f"I received: '{user_input}'. This is a default response from the Python backend."
    }
    
    # Check for specific keywords
    for keyword, response in responses.items():
        if keyword in user_input:
            return response
            
    return responses["default"]

@app.route('/api/health', methods=['GET'])
def health_check():
    return jsonify({"status": "healthy", "version": "1.0.0"})

@app.route('/api/chat', methods=['POST'])
def chat():
    """Main chat endpoint"""
    try:
        data = request.get_json()
        user_message = data.get('message', '')
        
        # Simulate processing delay (remove in production)
        time.sleep(0.5)
        
        bot_response = get_chatbot_response(user_message)
        
        return jsonify({
            "success": True,
            "response": bot_response,
            "timestamp": time.time()
        })
    except Exception as e:
        return jsonify({
            "success": False,
            "error": str(e)
        }), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)